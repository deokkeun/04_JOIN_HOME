--1. 학생이름과 주소지를 표시하시오
SELECT STUDENT_NAME, STUDENT_ADDRESS 
FROM TB_STUDENT;

--2. 휴학중인 학생들의 이름과 주민번호를 나이가 적은 순서로
SELECT STUDENT_NAME, STUDENT_SSN 
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY STUDENT_SSN DESC;

--3. 주소지가 강원도나 경기도인 학생들중 1900년대 학번을 가진 학생들의
-- 이름과 학번, 주소를 오름차순으로 출력하시오
SELECT STUDENT_NAME, STUDENT_NO, STUDENT_ADDRESS 
FROM TB_STUDENT
WHERE STUDENT_NO LIKE '9%'
AND (STUDENT_ADDRESS LIKE '경기도%'
OR STUDENT_ADDRESS LIKE '강원도%')
ORDER BY STUDENT_NAME;


-- 4. 현재 법학과 교수 중 가장 나이가 많은 사람부터 이름을 확인할 수
-- 있는 SQL문장을 작성 하시오
SELECT PROFESSOR_NAME, PROFESSOR_SSN 
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = '005'
ORDER BY PROFESSOR_NAME DESC;


-- 5. 2004년 2학기에 'C3118100' 과목을 수강한 학생들의 학점을 조회하려고 한다.
-- 학점이 높은 학생부터 표시하고, 학점이 같으면 학번이 낮은 학생부터 표시하는 구문
SELECT STUDENT_NO, TO_CHAR(ROUND(AVG(POINT), 2), '9.00') POINT
FROM TB_GRADE
WHERE CLASS_NO = 'C3118100'
AND TERM_NO = '200402'
GROUP BY STUDENT_NO
ORDER BY POINT DESC;


-- 6. 학생 번호, 학생 이름, 학과 이름으로 오름차순 정렬
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME 
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO);

-- 7. 춘 기술대학교의 과목 이름과 과목의 학과 이름을 출력
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO);


-- 8. 과목별 교수 이름을 찾으려고 한다. 과목 이름과 교수 이름을 출력
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO);



-- 9. 8번의 결과 중 '인문사회' 계열에 속한 과목의 교수 이름을 찾으려고 한다.
-- 이에 해당하는 과목 이름과 교수 이름을 출력하는 SQL 문을 작성하시오.
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS C
JOIN TB_CLASS_PROFESSOR CP ON(C.CLASS_NO = CP.CLASS_NO)
JOIN TB_PROFESSOR P ON(P.PROFESSOR_NO = CP.PROFESSOR_NO)
JOIN TB_DEPARTMENT D ON(D.DEPARTMENT_NO = P.DEPARTMENT_NO)
WHERE CATEGORY = '인문사회'
ORDER BY CLASS_NAME;


-- 10번 '음악학과' 학생들의 평점을 구하려고 한다.
-- 음악학과 학생들의 '학번', '학생 이름', '전체 평점'을 출력
-- 평점은 소수점 1자리 까지만 반올림
SELECT STUDENT_NO, STUDENT_NAME, ROUND(AVG(POINT),1)
FROM TB_STUDENT
JOIN TB_GRADE USING(STUDENT_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY STUDENT_NO, STUDENT_NAME
ORDER BY STUDENT_NO;


-- 11. 학번이 A313047인 학생이 학교에 나오고 있지 않다.
-- 지도 교수에게 내용을 전달하기 위한 학과 이름, 학생 이름과 지도 교수
-- 이름이 필요하다.
SELECT DEPARTMENT_NAME 학과이름, STUDENT_NAME 학생이름, PROFESSOR_NAME 지도교수이름
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_PROFESSOR ON(COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE STUDENT_NO = 'A313047';

-- 12. 2007 년도에 '인간관계론' 과목을 수강한 학생을 찾아
-- 학생이름과 수강학기를 표시
SELECT STUDENT_NAME, TERM_NO
FROM TB_STUDENT
JOIN TB_GRADE USING(STUDENT_NO)
JOIN TB_CLASS USING(CLASS_NO)
WHERE CLASS_NAME = '인간관계론'
AND TERM_NO LIKE '2__7%';


-- 13. 예체능 계열 과목 중 과목 담당 교수를 한 명도 배정받지
-- 못한 과목을 찾아 그 과목 이름과 학과 이름을 출력






-- 14. 춘 기술대학교 서반어학과 학생들의 지도교수를 게시하고자 한다.
-- 학생이름과 지도교수 이름을 찾고 만일 지도교수가 없는 학생일 경우 '지도교수 미지정'으로
-- 표시하도록 하는 SQL문을 작성
SELECT STUDENT_NAME 학생이름, NVL(P.PROFESSOR_NAME, '지도교수 미지정') 지도교수
FROM TB_STUDENT S
LEFT JOIN TB_DEPARTMENT D USING(DEPARTMENT_NO)
LEFT JOIN TB_PROFESSOR P ON(P.PROFESSOR_NO = S.COACH_PROFESSOR_NO)
WHERE DEPARTMENT_NAME = '서반아어학과';



-- 15번 휴학생이 아닌 학생 중 평점이 4.0 이상인 학생을 찾아 그 학생의 학번,
-- 이름, 학과 이름, 평점을 출력하는 SQL문 작성
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME, AVG(POINT)
FROM TB_STUDENT S
LEFT JOIN TB_GRADE USING(STUDENT_NO)
LEFT JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE ABSENCE_YN = 'N'
GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
HAVING AVG(POINT) > 4.0;


-- 16번 환경조경학과 전공과목들의 과목 별 평점을 파악할 수 있는 SQL문 작성
SELECT CLASS_NO, CLASS_NAME, AVG(POINT)
FROM TB_CLASS
JOIN TB_GRADE USING(CLASS_NO)
WHERE DEPARTMENT_NO = '034'
AND CLASS_TYPE = '전공선택'
GROUP BY CLASS_NO, CLASS_NAME
ORDER BY CLASS_NO;


-- 17번 춘 기술대학교에 다니고 있는 최경희 학생과 같은 과 학생들의 이름과 주소를 출력
SELECT STUDENT_NAME, STUDENT_ADDRESS 
FROM TB_STUDENT
WHERE DEPARTMENT_NO = '038';


-- 18번 국어국문학과에서 총 평점이 가장 높은 학생의 이름과 학번을 표시하는 SQL문
SELECT STUDENT_NO, MAX(POINT)
FROM TB_GRADE
JOIN TB_STUDENT USING(STUDENT_NO)
WHERE DEPARTMENT_NO = '001' 
GROUP BY STUDENT_NO
HAVING AVG(POINT) = (SELECT MAX(AVG(POINT)) FROM TB_GRADE
					JOIN TB_STUDENT USING(STUDENT_NO)
					WHERE DEPARTMENT_NO = '001' 
					GROUP BY STUDENT_NO);


-- 19번 춘 기술대학교의 환경조경학과가 속한 같은 계열 학과들의 학과 별 전공과목 평점을
-- 파악하기 위한 적절한 SQL문을 찾아내시오

SELECT DEPARTMENT_NAME, ROUND(AVG(POINT), 1)
FROM TB_DEPARTMENT
JOIN TB_STUDENT USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(STUDENT_NO)
WHERE CATEGORY = '자연과학'
GROUP BY DEPARTMENT_NAME;
